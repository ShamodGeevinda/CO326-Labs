

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Feb 28 12:45:11 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 09/02/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F26K20 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    62   000000                     
    63 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    64   000000                     
    65 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    66   000000                     _TXREG	set	4013
    67   000000                     _RCREG	set	4014
    68   000000                     _SPBRG	set	4015
    69   000000                     _TXSTA	set	4012
    70                           
    71                           	psect	nvCOMRAM
    72   000001                     __pnvCOMRAM:
    73                           	callstack 0
    74   000001                     _EUSART_ErrorHandler:
    75                           	callstack 0
    76   000001                     	ds	2
    77   000003                     _EUSART_OverrunErrorHandler:
    78                           	callstack 0
    79   000003                     	ds	2
    80   000005                     _EUSART_FramingErrorHandler:
    81                           	callstack 0
    82   000005                     	ds	2
    83   000000                     _LATB	set	3978
    84   000000                     _RCSTAbits	set	4011
    85   000000                     _TXSTAbits	set	4012
    86   000000                     _WPUB	set	3964
    87   000000                     _ANSEL	set	3966
    88   000000                     _LATA	set	3977
    89   000000                     _LATBbits	set	3978
    90   000000                     _TRISA	set	3986
    91   000000                     _LATC	set	3979
    92   000000                     _PIR1bits	set	3998
    93   000000                     _RCSTA	set	4011
    94   000000                     _BAUDCON	set	4024
    95   000000                     _OSCCON	set	4051
    96   000000                     _INTCON2bits	set	4081
    97   000000                     _SPBRGH	set	4016
    98   000000                     _OSCTUNE	set	3995
    99   000000                     _TRISC	set	3988
   100   000000                     _TRISB	set	3987
   101   000000                     _ANSELH	set	3967
   102   000000                     _INTCONbits	set	4082
   103                           
   104                           	psect	smallconst
   105   001000                     __psmallconst:
   106                           	callstack 0
   107   001000  00                 	db	0
   108   001001                     STR_2:
   109   001001  50                 	db	80	;'P'
   110   001002  72                 	db	114	;'r'
   111   001003  65                 	db	101	;'e'
   112   001004  73                 	db	115	;'s'
   113   001005  73                 	db	115	;'s'
   114   001006  20                 	db	32
   115   001007  31                 	db	49	;'1'
   116   001008  20                 	db	32
   117   001009  66                 	db	102	;'f'
   118   00100A  6F                 	db	111	;'o'
   119   00100B  72                 	db	114	;'r'
   120   00100C  20                 	db	32
   121   00100D  52                 	db	82	;'R'
   122   00100E  65                 	db	101	;'e'
   123   00100F  64                 	db	100	;'d'
   124   001010  2C                 	db	44
   125   001011  20                 	db	32
   126   001012  32                 	db	50	;'2'
   127   001013  20                 	db	32
   128   001014  66                 	db	102	;'f'
   129   001015  6F                 	db	111	;'o'
   130   001016  72                 	db	114	;'r'
   131   001017  20                 	db	32
   132   001018  59                 	db	89	;'Y'
   133   001019  65                 	db	101	;'e'
   134   00101A  6C                 	db	108	;'l'
   135   00101B  6C                 	db	108	;'l'
   136   00101C  6F                 	db	111	;'o'
   137   00101D  77                 	db	119	;'w'
   138   00101E  2C                 	db	44
   139   00101F  20                 	db	32
   140   001020  33                 	db	51	;'3'
   141   001021  20                 	db	32
   142   001022  66                 	db	102	;'f'
   143   001023  6F                 	db	111	;'o'
   144   001024  72                 	db	114	;'r'
   145   001025  20                 	db	32
   146   001026  47                 	db	71	;'G'
   147   001027  72                 	db	114	;'r'
   148   001028  65                 	db	101	;'e'
   149   001029  65                 	db	101	;'e'
   150   00102A  6E                 	db	110	;'n'
   151   00102B  20                 	db	32
   152   00102C  2E                 	db	46
   153   00102D  2E                 	db	46
   154   00102E  2E                 	db	46
   155   00102F  0D                 	db	13
   156   001030  00                 	db	0
   157   001031                     STR_1:
   158   001031  57                 	db	87	;'W'
   159   001032  65                 	db	101	;'e'
   160   001033  6C                 	db	108	;'l'
   161   001034  63                 	db	99	;'c'
   162   001035  6F                 	db	111	;'o'
   163   001036  6D                 	db	109	;'m'
   164   001037  65                 	db	101	;'e'
   165   001038  20                 	db	32
   166   001039  74                 	db	116	;'t'
   167   00103A  6F                 	db	111	;'o'
   168   00103B  20                 	db	32
   169   00103C  43                 	db	67	;'C'
   170   00103D  4F                 	db	79	;'O'
   171   00103E  33                 	db	51	;'3'
   172   00103F  32                 	db	50	;'2'
   173   001040  36                 	db	54	;'6'
   174   001041  20                 	db	32
   175   001042  4C                 	db	76	;'L'
   176   001043  61                 	db	97	;'a'
   177   001044  62                 	db	98	;'b'
   178   001045  33                 	db	51	;'3'
   179   001046  0D                 	db	13
   180   001047  00                 	db	0
   181   001048  00                 	db	0	; dummy byte at the end
   182   000000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   0011DA                     __pcinit:
   187                           	callstack 0
   188   0011DA                     start_initialization:
   189                           	callstack 0
   190   0011DA                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Clear objects allocated to COMRAM (1 bytes)
   194   0011DA  6A0D               	clrf	__pbssCOMRAM& (0+255),c
   195   0011DC                     end_of_initialization:
   196                           	callstack 0
   197   0011DC                     __end_of__initialization:
   198                           	callstack 0
   199   0011DC  0100               	movlb	0
   200   0011DE  EF25  F008         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203   00000D                     __pbssCOMRAM:
   204                           	callstack 0
   205   00000D                     _eusartRxLastError:
   206                           	callstack 0
   207   00000D                     	ds	1
   208                           
   209                           	psect	cstackCOMRAM
   210   000007                     __pcstackCOMRAM:
   211                           	callstack 0
   212   000007                     EUSART_Write@txData:
   213                           	callstack 0
   214   000007                     EUSART_SetFramingErrorHandler@interruptHandler:
   215                           	callstack 0
   216   000007                     EUSART_SetOverrunErrorHandler@interruptHandler:
   217                           	callstack 0
   218   000007                     EUSART_SetErrorHandler@interruptHandler:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x0
   222   000007                     	ds	1
   223   000008                     send_string@x:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x1
   227   000008                     	ds	1
   228   000009                     
   229                           ; 1 bytes @ 0x2
   230   000009                     	ds	1
   231   00000A                     ??_main:
   232                           
   233                           ; 1 bytes @ 0x3
   234   00000A                     	ds	2
   235   00000C                     main@data:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x5
   239   00000C                     	ds	1
   240                           
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 56 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;  data            1    5[COMRAM] unsigned char 
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;Total ram usage:        3 bytes
   265 ;; Hardware stack levels required when called: 3
   266 ;; This function calls:
   267 ;;		_EUSART_Read
   268 ;;		_SYSTEM_Initialize
   269 ;;		_send_string
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text0
   276   00104A                     __ptext0:
   277                           	callstack 0
   278   00104A                     _main:
   279                           	callstack 28
   280   00104A                     
   281                           ;main.c: 59:     SYSTEM_Initialize();
   282   00104A  ECD2  F008         	call	_SYSTEM_Initialize	;wreg free
   283   00104E                     
   284                           ;main.c: 60:  send_string("Welcome to CO326 Lab3\r");
   285   00104E  0E31               	movlw	low STR_1
   286   001050  6E08               	movwf	send_string@x^0,c
   287   001052  0E10               	movlw	high STR_1
   288   001054  6E09               	movwf	(send_string@x+1)^0,c
   289   001056  EC83  F008         	call	_send_string	;wreg free
   290   00105A                     
   291                           ;main.c: 61:     send_string("Press 1 for Red, 2 for Yellow, 3 for Green ...\r");
   292   00105A  0E01               	movlw	low STR_2
   293   00105C  6E08               	movwf	send_string@x^0,c
   294   00105E  0E10               	movlw	high STR_2
   295   001060  6E09               	movwf	(send_string@x+1)^0,c
   296   001062  EC83  F008         	call	_send_string	;wreg free
   297   001066                     l984:
   298                           
   299                           ;main.c: 80:     {;main.c: 83:         char data = EUSART_Read();
   300   001066  ECA0  F008         	call	_EUSART_Read	;wreg free
   301   00106A  6E0C               	movwf	main@data^0,c
   302   00106C  908A               	bcf	138,0,c	;volatile
   303   00106E  928A               	bcf	138,1,c	;volatile
   304   001070  948A               	bcf	138,2,c	;volatile
   305   001072  EF49  F008         	goto	l992
   306   001076                     l28:
   307   001076  808A               	bsf	138,0,c	;volatile
   308   001078  EF33  F008         	goto	l984
   309   00107C                     l32:
   310   00107C  828A               	bsf	138,1,c	;volatile
   311   00107E  EF33  F008         	goto	l984
   312   001082                     l35:
   313   001082  848A               	bsf	138,2,c	;volatile
   314   001084  EF33  F008         	goto	l984
   315   001088                     l38:
   316   001088  908A               	bcf	138,0,c	;volatile
   317   00108A  928A               	bcf	138,1,c	;volatile
   318   00108C  948A               	bcf	138,2,c	;volatile
   319   00108E  EF33  F008         	goto	l984
   320   001092                     l992:
   321   001092  500C               	movf	main@data^0,w,c
   322   001094  6E0A               	movwf	??_main^0,c
   323   001096  6A0B               	clrf	(??_main+1)^0,c
   324                           
   325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   326                           ; Switch size 1, requested type "simple"
   327                           ; Number of cases is 1, Range of values is 0 to 0
   328                           ; switch strategies available:
   329                           ; Name         Instructions Cycles
   330                           ; simple_byte            4     3 (average)
   331                           ;	Chosen strategy is simple_byte
   332   001098  500B               	movf	(??_main+1)^0,w,c
   333   00109A  0A00               	xorlw	0	; case 0
   334   00109C  B4D8               	btfsc	status,2,c
   335   00109E  EF53  F008         	goto	l1002
   336   0010A2  EF44  F008         	goto	l38
   337   0010A6                     l1002:
   338                           
   339                           ; Switch size 1, requested type "simple"
   340                           ; Number of cases is 3, Range of values is 49 to 51
   341                           ; switch strategies available:
   342                           ; Name         Instructions Cycles
   343                           ; simple_byte           10     6 (average)
   344                           ;	Chosen strategy is simple_byte
   345   0010A6  500A               	movf	??_main^0,w,c
   346   0010A8  0A31               	xorlw	49	; case 49
   347   0010AA  B4D8               	btfsc	status,2,c
   348   0010AC  EF3B  F008         	goto	l28
   349   0010B0  0A03               	xorlw	3	; case 50
   350   0010B2  B4D8               	btfsc	status,2,c
   351   0010B4  EF3E  F008         	goto	l32
   352   0010B8  0A01               	xorlw	1	; case 51
   353   0010BA  B4D8               	btfsc	status,2,c
   354   0010BC  EF41  F008         	goto	l35
   355   0010C0  EF44  F008         	goto	l38
   356   0010C4  EF00  F000         	goto	start
   357   0010C8                     __end_of_main:
   358                           	callstack 0
   359                           
   360 ;; *************** function _send_string *****************
   361 ;; Defined at:
   362 ;;		line 50 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;  x               2    1[COMRAM] PTR const unsigned char 
   365 ;;		 -> STR_2(48), STR_1(23), 
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;Total ram usage:        2 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; Hardware stack levels required when called: 1
   384 ;; This function calls:
   385 ;;		_EUSART_Write
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text1
   392   001106                     __ptext1:
   393                           	callstack 0
   394   001106                     _send_string:
   395                           	callstack 29
   396   001106                     
   397                           ;main.c: 51:     while(*x){
   398   001106  EF90  F008         	goto	l972
   399   00110A                     l968:
   400                           
   401                           ;main.c: 52:         EUSART_Write(*x++);
   402   00110A  C008  FFF6         	movff	send_string@x,tblptrl
   403   00110E  C009  FFF7         	movff	send_string@x+1,tblptrh
   404   001112                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   405   001112  6AF8               	clrf	tblptru,c
   406   001114                     	endif
   407   001114                     	if	0	;tblptru may be non-zero
   408   001114                     	endif
   409   001114  0008               	tblrd		*
   410   001116  50F5               	movf	tablat,w,c
   411   001118  ECC7  F008         	call	_EUSART_Write
   412   00111C  4A08               	infsnz	send_string@x^0,f,c
   413   00111E  2A09               	incf	(send_string@x+1)^0,f,c
   414   001120                     l972:
   415                           
   416                           ;main.c: 51:     while(*x){
   417   001120  C008  FFF6         	movff	send_string@x,tblptrl
   418   001124  C009  FFF7         	movff	send_string@x+1,tblptrh
   419   001128                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   420   001128  6AF8               	clrf	tblptru,c
   421   00112A                     	endif
   422   00112A                     	if	0	;tblptru may be non-zero
   423   00112A                     	endif
   424   00112A  0008               	tblrd		*
   425   00112C  50F5               	movf	tablat,w,c
   426   00112E  0900               	iorlw	0
   427   001130  A4D8               	btfss	status,2,c
   428   001132  EF9D  F008         	goto	u71
   429   001136  EF9F  F008         	goto	u70
   430   00113A                     u71:
   431   00113A  EF85  F008         	goto	l968
   432   00113E                     u70:
   433   00113E  0012               	return		;funcret
   434   001140                     __end_of_send_string:
   435                           	callstack 0
   436                           
   437 ;; *************** function _EUSART_Write *****************
   438 ;; Defined at:
   439 ;;		line 132 in file "mcc_generated_files/eusart.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  txData          1    wreg     unsigned char 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  txData          1    0[COMRAM] unsigned char 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;Total ram usage:        1 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_send_string
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text2
   467   00118E                     __ptext2:
   468                           	callstack 0
   469   00118E                     _EUSART_Write:
   470                           	callstack 29
   471                           
   472                           ;incstack = 0
   473                           ;EUSART_Write@txData stored from wreg
   474   00118E  6E07               	movwf	EUSART_Write@txData^0,c
   475   001190                     l113:
   476                           
   477                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
   478   001190  A89E               	btfss	158,4,c	;volatile
   479   001192  EFCD  F008         	goto	u11
   480   001196  EFCF  F008         	goto	u10
   481   00119A                     u11:
   482   00119A  EFC8  F008         	goto	l113
   483   00119E                     u10:
   484   00119E                     
   485                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
   486   00119E  C007  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   487   0011A2  0012               	return		;funcret
   488   0011A4                     __end_of_EUSART_Write:
   489                           	callstack 0
   490                           
   491 ;; *************** function _SYSTEM_Initialize *****************
   492 ;; Defined at:
   493 ;;		line 50 in file "mcc_generated_files/mcc.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 2
   514 ;; This function calls:
   515 ;;		_EUSART_Initialize
   516 ;;		_OSCILLATOR_Initialize
   517 ;;		_PIN_MANAGER_Initialize
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text3
   524   0011A4                     __ptext3:
   525                           	callstack 0
   526   0011A4                     _SYSTEM_Initialize:
   527                           	callstack 28
   528   0011A4                     
   529                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   530   0011A4  ECB4  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   531                           
   532                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   533   0011A8  ECD9  F008         	call	_OSCILLATOR_Initialize	;wreg free
   534   0011AC                     
   535                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
   536   0011AC  EC64  F008         	call	_EUSART_Initialize	;wreg free
   537   0011B0  0012               	return		;funcret
   538   0011B2                     __end_of_SYSTEM_Initialize:
   539                           	callstack 0
   540                           
   541 ;; *************** function _PIN_MANAGER_Initialize *****************
   542 ;; Defined at:
   543 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_SYSTEM_Initialize
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text4
   571   001168                     __ptext4:
   572                           	callstack 0
   573   001168                     _PIN_MANAGER_Initialize:
   574                           	callstack 29
   575   001168                     
   576                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   577   001168  0E00               	movlw	0
   578   00116A  6E89               	movwf	137,c	;volatile
   579                           
   580                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   581   00116C  0E00               	movlw	0
   582   00116E  6E8A               	movwf	138,c	;volatile
   583                           
   584                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   585   001170  0E00               	movlw	0
   586   001172  6E8B               	movwf	139,c	;volatile
   587   001174                     
   588                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   589   001174  6892               	setf	146,c	;volatile
   590                           
   591                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF8;
   592   001176  0EF8               	movlw	248
   593   001178  6E93               	movwf	147,c	;volatile
   594                           
   595                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   596   00117A  0EBF               	movlw	191
   597   00117C  6E94               	movwf	148,c	;volatile
   598                           
   599                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x1F;
   600   00117E  0E1F               	movlw	31
   601   001180  6E7E               	movwf	126,c	;volatile
   602                           
   603                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
   604   001182  0E1F               	movlw	31
   605   001184  6E7F               	movwf	127,c	;volatile
   606                           
   607                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
   608   001186  0E00               	movlw	0
   609   001188  6E7C               	movwf	124,c	;volatile
   610   00118A                     
   611                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
   612   00118A  8EF1               	bsf	241,7,c	;volatile
   613   00118C  0012               	return		;funcret
   614   00118E                     __end_of_PIN_MANAGER_Initialize:
   615                           	callstack 0
   616                           
   617 ;; *************** function _OSCILLATOR_Initialize *****************
   618 ;; Defined at:
   619 ;;		line 58 in file "mcc_generated_files/mcc.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_SYSTEM_Initialize
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text5
   647   0011B2                     __ptext5:
   648                           	callstack 0
   649   0011B2                     _OSCILLATOR_Initialize:
   650                           	callstack 29
   651   0011B2                     
   652                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x60;
   653   0011B2  0E60               	movlw	96
   654   0011B4  6ED3               	movwf	211,c	;volatile
   655                           
   656                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
   657   0011B6  0E00               	movlw	0
   658   0011B8  6E9B               	movwf	155,c	;volatile
   659   0011BA  0012               	return		;funcret
   660   0011BC                     __end_of_OSCILLATOR_Initialize:
   661                           	callstack 0
   662                           
   663 ;; *************** function _EUSART_Initialize *****************
   664 ;; Defined at:
   665 ;;		line 66 in file "mcc_generated_files/eusart.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 1
   686 ;; This function calls:
   687 ;;		_EUSART_SetErrorHandler
   688 ;;		_EUSART_SetFramingErrorHandler
   689 ;;		_EUSART_SetOverrunErrorHandler
   690 ;; This function is called by:
   691 ;;		_SYSTEM_Initialize
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text6
   696   0010C8                     __ptext6:
   697                           	callstack 0
   698   0010C8                     _EUSART_Initialize:
   699                           	callstack 28
   700   0010C8                     
   701                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
   702   0010C8  0E08               	movlw	8
   703   0010CA  6EB8               	movwf	184,c	;volatile
   704                           
   705                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
   706   0010CC  0E90               	movlw	144
   707   0010CE  6EAB               	movwf	171,c	;volatile
   708                           
   709                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
   710   0010D0  0E24               	movlw	36
   711   0010D2  6EAC               	movwf	172,c	;volatile
   712                           
   713                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xCF;
   714   0010D4  0ECF               	movlw	207
   715   0010D6  6EAF               	movwf	175,c	;volatile
   716                           
   717                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
   718   0010D8  0E00               	movlw	0
   719   0010DA  6EB0               	movwf	176,c	;volatile
   720   0010DC                     
   721                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   722   0010DC  0E00               	movlw	0
   723   0010DE  6E07               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   724   0010E0  0E00               	movlw	0
   725   0010E2  6E08               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   726   0010E4  ECE3  F008         	call	_EUSART_SetFramingErrorHandler	;wreg free
   727   0010E8                     
   728                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   729   0010E8  0E00               	movlw	0
   730   0010EA  6E07               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   731   0010EC  0E00               	movlw	0
   732   0010EE  6E08               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   733   0010F0  ECDE  F008         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   734   0010F4                     
   735                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   736   0010F4  0E00               	movlw	0
   737   0010F6  6E07               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   738   0010F8  0E00               	movlw	0
   739   0010FA  6E08               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   740   0010FC  ECE8  F008         	call	_EUSART_SetErrorHandler	;wreg free
   741   001100                     
   742                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
   743   001100  0E00               	movlw	0
   744   001102  6E0D               	movwf	_eusartRxLastError^0,c	;volatile
   745   001104  0012               	return		;funcret
   746   001106                     __end_of_EUSART_Initialize:
   747                           	callstack 0
   748                           
   749 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
   750 ;; Defined at:
   751 ;;		line 161 in file "mcc_generated_files/eusart.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   754 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_EUSART_Initialize
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text7
   780   0011BC                     __ptext7:
   781                           	callstack 0
   782   0011BC                     _EUSART_SetOverrunErrorHandler:
   783                           	callstack 28
   784   0011BC                     
   785                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
   786   0011BC  C007  F003         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
   787   0011C0  C008  F004         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
   788   0011C4  0012               	return		;funcret
   789   0011C6                     __end_of_EUSART_SetOverrunErrorHandler:
   790                           	callstack 0
   791                           
   792 ;; *************** function _EUSART_SetFramingErrorHandler *****************
   793 ;; Defined at:
   794 ;;		line 157 in file "mcc_generated_files/eusart.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   797 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;Total ram usage:        2 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_EUSART_Initialize
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text8
   823   0011C6                     __ptext8:
   824                           	callstack 0
   825   0011C6                     _EUSART_SetFramingErrorHandler:
   826                           	callstack 28
   827   0011C6                     
   828                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
   829   0011C6  C007  F005         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
   830   0011CA  C008  F006         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
   831   0011CE  0012               	return		;funcret
   832   0011D0                     __end_of_EUSART_SetFramingErrorHandler:
   833                           	callstack 0
   834                           
   835 ;; *************** function _EUSART_SetErrorHandler *****************
   836 ;; Defined at:
   837 ;;		line 165 in file "mcc_generated_files/eusart.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   840 ;;		 -> EUSART_DefaultErrorHandler(1), 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_EUSART_Initialize
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text9
   866   0011D0                     __ptext9:
   867                           	callstack 0
   868   0011D0                     _EUSART_SetErrorHandler:
   869                           	callstack 28
   870   0011D0                     
   871                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
   872   0011D0  C007  F001         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
   873   0011D4  C008  F002         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
   874   0011D8  0012               	return		;funcret
   875   0011DA                     __end_of_EUSART_SetErrorHandler:
   876                           	callstack 0
   877                           
   878 ;; *************** function _EUSART_Read *****************
   879 ;; Defined at:
   880 ;;		line 113 in file "mcc_generated_files/eusart.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      unsigned char 
   887 ;; Registers used:
   888 ;;		wreg, status,2
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text10
   908   001140                     __ptext10:
   909                           	callstack 0
   910   001140                     _EUSART_Read:
   911                           	callstack 30
   912   001140                     l106:
   913                           
   914                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RC1IF)
   915   001140  AA9E               	btfss	158,5,c	;volatile
   916   001142  EFA5  F008         	goto	u31
   917   001146  EFA7  F008         	goto	u30
   918   00114A                     u31:
   919   00114A  EFA0  F008         	goto	l106
   920   00114E                     u30:
   921   00114E                     
   922                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
   923   00114E  0E00               	movlw	0
   924   001150  6E0D               	movwf	_eusartRxLastError^0,c	;volatile
   925   001152                     
   926                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
   927   001152  A2AB               	btfss	171,1,c	;volatile
   928   001154  EFAE  F008         	goto	u41
   929   001158  EFB0  F008         	goto	u40
   930   00115C                     u41:
   931   00115C  EFB2  F008         	goto	l902
   932   001160                     u40:
   933   001160                     
   934                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
   935   001160  98AB               	bcf	171,4,c	;volatile
   936                           
   937                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
   938   001162  88AB               	bsf	171,4,c	;volatile
   939   001164                     l902:
   940                           
   941                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
   942   001164  50AE               	movf	174,w,c	;volatile
   943   001166  0012               	return		;funcret
   944   001168                     __end_of_EUSART_Read:
   945                           	callstack 0
   946                           
   947                           	psect	rparam
   948   000000                     
   949                           	psect	idloc
   950                           
   951                           ;Config register IDLOC0 @ 0x200000
   952                           ;	unspecified, using default values
   953   200000                     	org	2097152
   954   200000  FF                 	db	255
   955                           
   956                           ;Config register IDLOC1 @ 0x200001
   957                           ;	unspecified, using default values
   958   200001                     	org	2097153
   959   200001  FF                 	db	255
   960                           
   961                           ;Config register IDLOC2 @ 0x200002
   962                           ;	unspecified, using default values
   963   200002                     	org	2097154
   964   200002  FF                 	db	255
   965                           
   966                           ;Config register IDLOC3 @ 0x200003
   967                           ;	unspecified, using default values
   968   200003                     	org	2097155
   969   200003  FF                 	db	255
   970                           
   971                           ;Config register IDLOC4 @ 0x200004
   972                           ;	unspecified, using default values
   973   200004                     	org	2097156
   974   200004  FF                 	db	255
   975                           
   976                           ;Config register IDLOC5 @ 0x200005
   977                           ;	unspecified, using default values
   978   200005                     	org	2097157
   979   200005  FF                 	db	255
   980                           
   981                           ;Config register IDLOC6 @ 0x200006
   982                           ;	unspecified, using default values
   983   200006                     	org	2097158
   984   200006  FF                 	db	255
   985                           
   986                           ;Config register IDLOC7 @ 0x200007
   987                           ;	unspecified, using default values
   988   200007                     	org	2097159
   989   200007  FF                 	db	255
   990                           
   991                           	psect	config
   992                           
   993                           ; Padding undefined space
   994   300000                     	org	3145728
   995   300000  FF                 	db	255
   996                           
   997                           ;Config register CONFIG1H @ 0x300001
   998                           ;	Oscillator Selection bits
   999                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1000                           ;	Fail-Safe Clock Monitor Enable bit
  1001                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1002                           ;	Internal/External Oscillator Switchover bit
  1003                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1004   300001                     	org	3145729
  1005   300001  08                 	db	8
  1006                           
  1007                           ;Config register CONFIG2L @ 0x300002
  1008                           ;	Power-up Timer Enable bit
  1009                           ;	PWRT = OFF, PWRT disabled
  1010                           ;	Brown-out Reset Enable bits
  1011                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1012                           ;	Brown Out Reset Voltage bits
  1013                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1014   300002                     	org	3145730
  1015   300002  1F                 	db	31
  1016                           
  1017                           ;Config register CONFIG2H @ 0x300003
  1018                           ;	Watchdog Timer Enable bit
  1019                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1020                           ;	Watchdog Timer Postscale Select bits
  1021                           ;	WDTPS = 32768, 1:32768
  1022   300003                     	org	3145731
  1023   300003  1E                 	db	30
  1024                           
  1025                           ; Padding undefined space
  1026   300004                     	org	3145732
  1027   300004  FF                 	db	255
  1028                           
  1029                           ;Config register CONFIG3H @ 0x300005
  1030                           ;	CCP2 MUX bit
  1031                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1032                           ;	PORTB A/D Enable bit
  1033                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1034                           ;	Low-Power Timer1 Oscillator Enable bit
  1035                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1036                           ;	HFINTOSC Fast Start-up
  1037                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1038                           ;	MCLR Pin Enable bit
  1039                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1040   300005                     	org	3145733
  1041   300005  89                 	db	137
  1042                           
  1043                           ;Config register CONFIG4L @ 0x300006
  1044                           ;	Stack Full/Underflow Reset Enable bit
  1045                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1046                           ;	Single-Supply ICSP Enable bit
  1047                           ;	LVP = ON, Single-Supply ICSP enabled
  1048                           ;	Extended Instruction Set Enable bit
  1049                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1050                           ;	Background Debugger Enable bit
  1051                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1052   300006                     	org	3145734
  1053   300006  85                 	db	133
  1054                           
  1055                           ; Padding undefined space
  1056   300007                     	org	3145735
  1057   300007  FF                 	db	255
  1058                           
  1059                           ;Config register CONFIG5L @ 0x300008
  1060                           ;	Code Protection Block 0
  1061                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1062                           ;	Code Protection Block 1
  1063                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1064                           ;	Code Protection Block 2
  1065                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1066                           ;	Code Protection Block 3
  1067                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1068   300008                     	org	3145736
  1069   300008  0F                 	db	15
  1070                           
  1071                           ;Config register CONFIG5H @ 0x300009
  1072                           ;	Boot Block Code Protection bit
  1073                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1074                           ;	Data EEPROM Code Protection bit
  1075                           ;	CPD = OFF, Data EEPROM not code-protected
  1076   300009                     	org	3145737
  1077   300009  C0                 	db	192
  1078                           
  1079                           ;Config register CONFIG6L @ 0x30000A
  1080                           ;	Write Protection Block 0
  1081                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1082                           ;	Write Protection Block 1
  1083                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1084                           ;	Write Protection Block 2
  1085                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1086                           ;	Write Protection Block 3
  1087                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1088   30000A                     	org	3145738
  1089   30000A  0F                 	db	15
  1090                           
  1091                           ;Config register CONFIG6H @ 0x30000B
  1092                           ;	Configuration Register Write Protection bit
  1093                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1094                           ;	Boot Block Write Protection bit
  1095                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1096                           ;	Data EEPROM Write Protection bit
  1097                           ;	WRTD = OFF, Data EEPROM not write-protected
  1098   30000B                     	org	3145739
  1099   30000B  E0                 	db	224
  1100                           
  1101                           ;Config register CONFIG7L @ 0x30000C
  1102                           ;	Table Read Protection Block 0
  1103                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1104                           ;	Table Read Protection Block 1
  1105                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1106                           ;	Table Read Protection Block 2
  1107                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1108                           ;	Table Read Protection Block 3
  1109                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1110   30000C                     	org	3145740
  1111   30000C  0F                 	db	15
  1112                           
  1113                           ;Config register CONFIG7H @ 0x30000D
  1114                           ;	Boot Block Table Read Protection bit
  1115                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1116   30000D                     	org	3145741
  1117   30000D  40                 	db	64
  1118                           tosu	equ	0xFFF
  1119                           tosh	equ	0xFFE
  1120                           tosl	equ	0xFFD
  1121                           stkptr	equ	0xFFC
  1122                           pclatu	equ	0xFFB
  1123                           pclath	equ	0xFFA
  1124                           pcl	equ	0xFF9
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           prodh	equ	0xFF4
  1130                           prodl	equ	0xFF3
  1131                           indf0	equ	0xFEF
  1132                           postinc0	equ	0xFEE
  1133                           postdec0	equ	0xFED
  1134                           preinc0	equ	0xFEC
  1135                           plusw0	equ	0xFEB
  1136                           fsr0h	equ	0xFEA
  1137                           fsr0l	equ	0xFE9
  1138                           wreg	equ	0xFE8
  1139                           indf1	equ	0xFE7
  1140                           postinc1	equ	0xFE6
  1141                           postdec1	equ	0xFE5
  1142                           preinc1	equ	0xFE4
  1143                           plusw1	equ	0xFE3
  1144                           fsr1h	equ	0xFE2
  1145                           fsr1l	equ	0xFE1
  1146                           bsr	equ	0xFE0
  1147                           indf2	equ	0xFDF
  1148                           postinc2	equ	0xFDE
  1149                           postdec2	equ	0xFDD
  1150                           preinc2	equ	0xFDC
  1151                           plusw2	equ	0xFDB
  1152                           fsr2h	equ	0xFDA
  1153                           fsr2l	equ	0xFD9
  1154                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         1
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    send_string@x	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_2(CODE[48]), STR_1(CODE[23]), 


Critical Paths under _main in COMRAM

    _main->_send_string
    _send_string->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     529
                                              3 COMRAM     3     3      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     0      2     212
                                              1 COMRAM     2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_string
     _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       D       1       13.7%
BITBIGSFRhhlh       1D      0       0      37        0.0%
BITBIGSFRlll        1C      0       0      46        0.0%
BITBIGSFRhhll       1A      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllh        C      0       0      40        0.0%
BITBIGSFRlh          9      0       0      44        0.0%
BITBIGSFRhlhh        7      0       0      39        0.0%
BITBIGSFRhlllhl      6      0       0      42        0.0%
BITBIGSFRhllll       6      0       0      43        0.0%
BITBIGSFRhlllhh      2      0       0      41        0.0%
BITBIGSFRllh         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      47        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Feb 28 12:45:11 2023

                                           l14 113E                                             l40 108A  
                                           l32 107C                                             l42 108C  
                                           l35 1082                                             l28 1076  
                                           l38 1088                                             l89 1104  
                                           u10 119E                                             u11 119A  
                                           u30 114E                                             u31 114A  
                                           u40 1160                                             u41 115C  
                                           u70 113E                                             u71 113A  
                                          l110 1166                                            l113 1190  
                                          l106 1140                                            l131 11C4  
                                          l116 11A2                                            l134 11D8  
                                          l128 11CE                                            l159 118C  
                                          l175 11B0                                            l178 11BA  
                                          l900 1160                                            l902 1164  
                                          l860 1190                                            l950 11C6  
                                          l862 119E                                            l952 11BC  
                                          l960 10E8                                            l880 11B2  
                                          l954 11D0                                            l962 10F4  
                                          l874 1168                                            l970 111C  
                                          l964 1100                                            l956 10C8  
                                          l876 1174                                            l972 1120  
                                          l980 104E                                            l894 1140  
                                          l958 10DC                                            l878 118A  
                                          l974 11A4                                            l966 1106  
                                          l990 1070                                            l982 105A  
                                          l896 114E                                            l976 11AC  
                                          l968 110A                                            l992 1092  
                                          l984 1066                                            l898 1152  
                                          l986 106C                                            l978 104A  
                                          l988 106E                 ?_EUSART_SetFramingErrorHandler 0007  
                                 ?_EUSART_Read 0007                                           l1002 10A6  
                                         STR_1 1031                                           STR_2 1001  
                                         _LATA 0F89                                           _LATB 0F8A  
                                         _LATC 0F8B                                           _WPUB 0F7C  
                                         _main 104A                                           start 0000  
                                 ___param_bank 0000                                  ?_EUSART_Write 0007  
                __end_of_OSCILLATOR_Initialize 11BC                                          ?_main 0007  
                                        _ANSEL 0F7E                                          _RCREG 0FAE  
                                        _RCSTA 0FAB                                          _SPBRG 0FAF  
                                        _TRISA 0F92                                          _TRISB 0F93  
                                        _TRISC 0F94                                          _TXREG 0FAD  
                                        _TXSTA 0FAC                                          tablat 0FF5  
                                        status 0FD8                                __initialization 11DA  
                                 __end_of_main 10C8                                 ??_EUSART_Write 0007  
                                       ??_main 000A                                  __activetblptr 0003  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0003  
                                       _ANSELH 0F7F                                   ?_send_string 0008  
                                       _OSCCON 0FD3                                         _SPBRGH 0FB0  
                                       isa$std 0001                                   __mediumconst 0000  
                                       tblptrh 0FF7                                         tblptrl 0FF6  
                                       tblptru 0FF8                              _SYSTEM_Initialize 11A4  
                                   __accesstop 0060                        __end_of__initialization 11DC  
                           ?_SYSTEM_Initialize 0007                                  ___rparam_used 0001  
                               __pcstackCOMRAM 0007                            ??_SYSTEM_Initialize 0009  
              ??_EUSART_SetOverrunErrorHandler 0009                      __end_of_SYSTEM_Initialize 11B2  
                         __end_of_EUSART_Write 11A4                                     __pnvCOMRAM 0001  
                                      _BAUDCON 0FB8                                        _OSCTUNE 0F9B  
                     ??_EUSART_SetErrorHandler 0009                                        __Hparam 0000  
                                      __Lparam 0000                                   __psmallconst 1000  
                                      __pcinit 11DA                                        __ramtop 1000  
                                      __ptext0 104A                                        __ptext1 1106  
                                      __ptext2 118E                                        __ptext3 11A4  
                                      __ptext4 1168                                        __ptext5 11B2  
                                      __ptext6 10C8                                        __ptext7 11BC  
                                      __ptext8 11C6                                        __ptext9 11D0  
                        _OSCILLATOR_Initialize 11B2                       ??_PIN_MANAGER_Initialize 0007  
                         end_of_initialization 11DC          __end_of_EUSART_SetOverrunErrorHandler 11C6  
                _EUSART_SetOverrunErrorHandler 11BC                              _EUSART_Initialize 10C8  
                           ?_EUSART_Initialize 0007                                      _RCSTAbits 0FAB  
                          ??_EUSART_Initialize 0009                      __end_of_EUSART_Initialize 1106  
                                    _TXSTAbits 0FAC                     _EUSART_DefaultErrorHandler 0000  
                                 _EUSART_Write 118E                         ?_OSCILLATOR_Initialize 0007  
                          start_initialization 11DA                                  ??_EUSART_Read 0007  
               ?_EUSART_SetOverrunErrorHandler 0007                     _EUSART_FramingErrorHandler 0005  
                       _EUSART_SetErrorHandler 11D0                                    __pbssCOMRAM 000D  
                          __end_of_EUSART_Read 1168                         _PIN_MANAGER_Initialize 1168  
                                  __smallconst 1000                                  ??_send_string 000A  
       EUSART_SetErrorHandler@interruptHandler 0007                                       _LATBbits 0F8A  
                            _eusartRxLastError 000D                                       _PIR1bits 0F9E  
              ??_EUSART_SetFramingErrorHandler 0009              _EUSART_DefaultOverrunErrorHandler 0000  
                                  _EUSART_Read 1140                                    _INTCON2bits 0FF1  
                                     __Hrparam 0000                                   send_string@x 0008  
                          __end_of_send_string 1140                                       __Lrparam 0000  
                      ??_OSCILLATOR_Initialize 0007                            _EUSART_ErrorHandler 0001  
                                     __ptext10 1140                        ?_EUSART_SetErrorHandler 0007  
EUSART_SetOverrunErrorHandler@interruptHandler 0007                                       isa$xinst 0000  
                                     main@data 000C          __end_of_EUSART_SetFramingErrorHandler 11D0  
                _EUSART_SetFramingErrorHandler 11C6                                     _INTCONbits 0FF2  
                                  _send_string 1106                        ?_PIN_MANAGER_Initialize 0007  
               __end_of_EUSART_SetErrorHandler 11DA  EUSART_SetFramingErrorHandler@interruptHandler 0007  
                           EUSART_Write@txData 0007                 __end_of_PIN_MANAGER_Initialize 118E  
